//mmy Solution
class Solution {
    public int longestValidParentheses(String s) {
        if(s.length()==0) return 0;
        StringBuilder sb = new StringBuilder(s);
        boolean[] stat = new boolean[sb.length()];
        int idx;
        char ch;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0;i<sb.length();i++){
            ch = sb.charAt(i);
            if(ch == '('){
                stack.push(i);
            }else if(ch == ')'){
                if(stack.size()!=0  && sb.charAt(stack.peek()) == '('){
                    idx  = stack.pop();
                    stat[idx] = true;
                    stat[i] = true;
                }
            }
        }
        
        int max = 0;
        int len = 0;
        for(boolean val : stat){
            if(val){
                len++;
            }else{
                max = Math.max(len,max);
                len = 0;
            }
        }
        return Math.max(max,len);
    }
}