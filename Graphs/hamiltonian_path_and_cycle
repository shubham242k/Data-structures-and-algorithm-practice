import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;
      int wt;

      Edge(int src, int nbr, int wt) {
         this.src = src;
         this.nbr = nbr;
         this.wt = wt;
      }
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         int wt = Integer.parseInt(parts[2]);
         graph[v1].add(new Edge(v1, v2, wt));
         graph[v2].add(new Edge(v2, v1, wt));
      }

      int src = Integer.parseInt(br.readLine());
        boolean[] vis = new boolean[vtces];
        ham(graph,src,vis,"" + src);
      // write all your codes here
   }
    
    public static void ham(ArrayList<Edge>[] graph,int src,boolean[] vis,String path){
        if(path.length() == vis.length){
            for(Edge e : graph[src]){
                int start = Character.getNumericValue(path.charAt(0));  
                if(e.nbr == start){
                    System.out.println(path + "*");
                    return;
                }
            }
            System.out.println(path + ".");
            return;
        }
        
        vis[src] = true;
        for(Edge e : graph[src]){
            if(vis[e.nbr] == false){
                ham(graph,e.nbr,vis,path + e.nbr);
            }
        }
        vis[src] = false;
    }

}