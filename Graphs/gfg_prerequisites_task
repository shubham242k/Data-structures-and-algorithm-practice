class Solution {
    public boolean isPossible(int N, int[][] prerequisites)
    {
        int[] vis = new int[N];
        for(int i = 0;i<N;i++){
            if(vis[i] == 0){
                if(!dfs(prerequisites,i,vis)){
                    return false;
                }
            }
        }
        
        return true;
        
    }
    
    public boolean dfs(int[][] p,int src,int[] vis){
        vis[src] = 1;
        for(int i = 0;i<p.length;i++){
            if(p[i][0] == src){
                if(vis[p[i][1]] == 0){
                    boolean f = dfs(p,p[i][1],vis);
                    if(!f) return f;
                }else if(vis[p[i][1]] == 1){
                    return false;
                }
            }
        }
        
        vis[src] = 2;
        return true;
    }
    
}