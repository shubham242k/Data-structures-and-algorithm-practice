class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        
        ArrayList<Integer>[] graph = new ArrayList[n];
        for(int i = 0;i<n;i++){
            graph[i] = new ArrayList<>();
        }
        int[] deg = new int[n];
        for(int[] e : edges){
            graph[e[0]].add(e[1]);
            graph[e[1]].add(e[0]);
            deg[e[0]]++;
            deg[e[1]]++;
        }
       
        List<Integer> l = new ArrayList<>();
        Deque<Integer> q = new ArrayDeque<>();
        for(int i = 0;i<n;i++){
            if(deg[i] == 1) q.add(i);
        }
        int V = n;
        while(V>2){
            int size = q.size();
            V -= size;
            for(int i = 0;i<size;i++){
                int rem = q.remove();
                for(int nbr : graph[rem]){
                    deg[nbr]--;
                    if(deg[nbr] == 1){
                        q.add(nbr);
                    }
                }
            }
        }
        while(!q.isEmpty()){
            l.add(q.pop());
        }
        if(l.size()==0){
            l.add(0);
            return l;
        }
        return l;
    }
   
}