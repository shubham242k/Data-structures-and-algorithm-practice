class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        int[] vis = new int[numCourses];
        ArrayList<Integer>[] graph = new ArrayList[numCourses];
        for(int i = 0; i < numCourses; i++){
            graph[i] = new ArrayList();
        }
        for(int[] p : prerequisites){
            graph[p[0]].add(p[1]);
        }
        for(int i = 0 ;i<numCourses;i++){
            if(vis[i] == 0){
                if(!dfs(graph,vis,i)){
                    return false;
                }
            }
        }
        return true;
    }
    public boolean dfs(ArrayList<Integer>[] graph,int[] vis,int src){
        vis[src] = 1;
        for(int nbr : graph[src]){
            if(vis[nbr] == 1){
                    return false;
                }else if(vis[nbr] == 0){
                    if(!dfs(graph,vis,nbr))
                        return false;
                }
        }
        vis[src] = 2;
        return true;
    }
}