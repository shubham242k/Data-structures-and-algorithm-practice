import java.util.*;

public class Main {
  public static void display(int[][] board){
    for(int i = 0; i < board.length; i++){
      for(int j = 0; j < board[0].length; j++){
        System.out.print(board[i][j] + " ");
      }
      System.out.println();
    }
  }

  public static void solveSudoku(int[][] board, int i, int j) {
    // write yopur code here
    if(i==board.length){
        display(board);
        return;
    }
    int ni = 0;
    int nj = 0;
    if(j==board[0].length-1){
        nj = 0;
        ni= i+1;
    }else{
        nj = j+1;
        ni= i;
    }
  
    while(ni<board.length && board[ni][nj] != 0){
        nj++;
        if(nj == board.length){
            nj = 0;
            ni = ni+1;
        }
    }
    if(board[i][j] != 0){
        solveSudoku(board,ni,nj);
    }else{
        for(int num = 1;num<=9;num++){
            if(isSafe(board,i,j,num)){
                board[i][j] = num;
                solveSudoku(board,ni,nj);
                board[i][j] = 0;
            }
        }
    }
    
  }

  public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    int[][] arr = new int[9][9];
    for (int i = 0; i < 9; i++) {
      for (int j = 0; j < 9; j++) {
        arr[i][j] = scn.nextInt();
      }
    }

    solveSudoku(arr, 0, 0);
  }
  
  public static boolean isSafe(int[][] board,int r,int c,int num){
    for(int j = 0;j<9;j++){
        if(board[r][j] == num) return false;
    }
    for(int i = 0;i<9;i++){
        if(board[i][c] == num) return false;
    }
    int br = r/3 * 3;
    int bc = c/3 * 3;
    for(int i = 0;i<9;i++){
        if(board[i/3 + br][i%3+ bc] == num) return false;  
    }
    return true;
  }
}
