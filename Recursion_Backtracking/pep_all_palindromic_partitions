//my way

import java.io.*;
import java.util.*;

public class Main {

	public static void solution(String str, String asf) {
		//write you code here
		helper(str,"(" + str.charAt(0),1,0);
	}
	
	public static void helper(String s,String ans ,int idx,int obs){
	    if(idx == s.length()){
	        if(ispal(ans.substring(obs+1)))
	            System.out.println(ans + ")");
	        return;
	    }
	    
	    String lastpar = ans.substring(obs+1);
	    if(ispal(lastpar)){
	       // obs = ans.length()+2;
	         helper(s,ans + ") " + "(" + s.charAt(idx),idx + 1 ,ans.length()+2);
	    }
	    
	    helper(s,ans + s.charAt(idx),idx+1,obs);
	   
	}
	
	public static boolean ispal(String s){
	    int l = 0;
	    int r = s.length()-1;
	    while(l<r){
	        if(s.charAt(l) != s.charAt(r)){
	            return false;
	        }
	        l++;
	        r--;
	    }
	    
	    return true;
	}
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		String str = scn.nextLine();

		solution(str, "");
	}

}

//pep way
class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> ml = new ArrayList<>();
        List<String> l = new ArrayList<>();
        // l.add(s.charAt(0) + "");
        helper(s,l,ml);
        return ml;
    }
    public void helper(String s,
                       List<String> l, List<List<String>> ml){
        if(s.length() == 0){
            ml.add(new ArrayList<>(l));
            return;
        }
        
        for(int i = 0;i< s.length() ;i++){
            String prefix = s.substring(0,i+1);
            if(isPal(prefix)){
                l.add(prefix);
                helper(s.substring(i+1),l,ml);
                l.remove(l.size()-1);
            }
        }
    }
    
      public boolean isPal(String s){
            int l = 0;
            int r = s.length()-1;
            while(l<r){
                if(s.charAt(l) != s.charAt(r)){
                    return false;
                }
                l++;
                r--;
            }

            return true;
      }                    
                            
                          
}