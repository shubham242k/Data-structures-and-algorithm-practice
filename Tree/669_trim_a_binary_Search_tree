class Solution {
   
    public TreeNode trimBST(TreeNode root, int low, int high) {
        if(root == null){
            return null;
        }
        root.left = trimBST(root.left,low,high);
        root.right =  trimBST(root.right,low,high);
        if(root.val<low || root.val>high){
           return delete(root,root.val);
        }
        return root;
    }
    
    public TreeNode delete(TreeNode root,int val){
        if(root == null) return null;
        
        if(val < root.val)
            root.left = delete(root.left, val);
        else if (val > root.val)
            root.right = delete(root.right, val);
        else{
            if (root.left == null)
                return root.right;
            else if (root.right == null)
                return root.left;
            
            root.val = minValue(root.right);
 
            // Delete the inorder successor
            root.right = delete(root.right, root.val);
        }
         return root;
    }
    
    int minValue(TreeNode root){
        int minv = root.val;
        while (root.left != null)
        {
            minv = root.left.val;
            root = root.left;
        }
        return minv;
    }
   
}