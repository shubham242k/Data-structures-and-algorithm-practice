class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if(root == null){
            return new ArrayList<>();
        }
        ml = new ArrayList<>();
        helper(root,targetSum,new ArrayList<>());
        return ml;
    }
    
    static List<List<Integer>> ml;
    
    public void helper(TreeNode root, int targetSum,List<Integer> l){
      
        if(root.left == null && root.right == null){
            if(targetSum - root.val == 0){
                l.add(root.val);
                
                ml.add(new ArrayList<>(l));
               
                l.remove(l.size()-1);
            }
            return;
        }
       
        if(root.left!=null){
             l.add(root.val);
             helper(root.left,targetSum - root.val,l);
             l.remove(l.size()-1);
        }
        if(root.right!=null){
            l.add(root.val);
            helper(root.right,targetSum - root.val,l);
            l.remove(l.size()-1);
        }
       
        
    }
}