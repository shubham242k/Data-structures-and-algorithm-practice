import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner s = new Scanner(System.in);
        String str = s.next();
        
        Integer[][] dp = new Integer[str.length()][str.length()];
        
        // int max = lps(str,0,str.length()-1,dp);
        int max = lpstab(str);
        System.out.println(max);
    }
    
    public static int lpstab(String str){
        int[][] dp= new int[str.length()][str.length()];
        for(int gap = 0; gap <= str.length()-1 ;gap++){
            for(int i = 0,j= i + gap; i < dp.length && j < dp.length ;i++,j++){
                if(i == j){
                    dp[i][j] = 1;
                }else{
                    if(str.charAt(i) == str.charAt(j)){
                        dp[i][j] = dp[i+1][j-1] + 2;
                    }else{
                        dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]);
                    }
                }
            }
        }
        
        return dp[0][str.length()-1];
    }
    public static int lps(String str,int s,int e,Integer[][] dp){
        if(s == e){
            return 1;
        }else if( s > e){
            return 0;
        }
        if(dp[s][e] != null){
            return dp[s][e];
        }
        if(str.charAt(s) == str.charAt(e)){
            dp[s][e] =  lps(str,s+1,e-1,dp) + 2;
            return dp[s][e];
        }else{
            int fir = lps(str,s+1,e,dp);
            int sec = lps(str,s,e-1,dp);
            dp[s][e] = Math.max(fir,sec);
            return dp[s][e];
        }
    }

}