class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] d = new int[n][m];
        if(obstacleGrid[0][0] == 1){
            return 0;
        }
        for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
                if(i==0 && j == 0){
                    d[i][j] = 1;
                    continue;
                }
                if(obstacleGrid[i][j] ==0){
                    if(i == 0){
                        d[i][j] = obstacleGrid[i][j-1]==0?d[i][j-1]:0;
                    }else if(j==0){
                        d[i][j] = obstacleGrid[i-1][j]==0?d[i-1][j]:0;
                    }else{
                        d[i][j] = (obstacleGrid[i][j-1]==0?d[i][j-1]:0) + 
                            (obstacleGrid[i-1][j]==0?d[i-1][j]:0);
                    }
                }
            }
        }
        
        return d[n-1][m-1];
    }
}