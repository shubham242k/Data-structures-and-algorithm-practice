class Solution {
    public boolean isMatch(String s, String p) {
        // return helper(s,p,0,0,new Integer[p.length()][s.length()]);
        
        boolean[][] dp = new boolean[p.length()+1][s.length()+1];
        
        for(int i = 0;i<dp.length;i++){
            for(int j = 0;j<dp[0].length;j++){
                if(i == 0 && j == 0){
                    dp[i][j] = true;
                }else if(i == 0){
                    dp[i][j] = false;
                }else if(j == 0){
                    char ch = p.charAt(i-1);
                    if(ch == '*'){
                        dp[i][j] = dp[i-2][j];
                    }else{
                        dp[i][j] = false;
                    }
                }else{
                    char ch = p.charAt(i-1);
                    if(ch == '.'){
                        dp[i][j] = dp[i-1][j-1];
                    }else if(ch == '*'){
                        dp[i][j] = dp[i-2][j];
                        char prev = p.charAt(i-2);
                        if(prev == '.' || prev == s.charAt(j-1)){
                             dp[i][j] = dp[i][j] || dp[i][j-1];
                        }
                    }else{
                        if(ch == s.charAt(j-1)){
                            dp[i][j] = dp[i-1][j-1];
                        }else{
                            dp[i][j] = false;
                        }
                    }
                }
            }
        }
        
        return dp[p.length()][s.length()];
        
    }
    
   
    public static boolean helper(String s, String p,int sidx,int pidx,Integer[][] dp){
        if(pidx == p.length() && sidx == s.length()){
	        return true;
	    }else if(pidx == p.length()){
	        return false;
	    }else if(sidx == s.length()){
            if(p.charAt(p.length()-1) != '*'){
                return false;
            }
	        for(int i = pidx ; i< p.length();i++){
	            if(p.charAt(i) != '*'){
                    if(i < p.length()-1 && p.charAt(i+1) != '*'){
                        return false;
                    }
                }
	        }
            return true;
	    }
        if(dp[pidx][sidx] != null){
            return dp[pidx][sidx] == 1?true:false;
        }
        char pch = p.charAt(pidx);
        boolean flag;
        
        if(pch == '.'){
            if(pidx + 1 < p.length() && p.charAt(pidx + 1) == '*'){
                flag = helper(s,p,sidx,pidx + 2,dp) || 
                            helper(s,p,sidx+1,pidx,dp);
            }else{
                flag = helper(s,p,sidx+1,pidx + 1,dp);
            }
        }else{
            if(pidx + 1 < p.length() && p.charAt(pidx + 1) == '*'){
                if(pch == s.charAt(sidx)){
                    flag = helper(s,p,sidx,pidx + 2,dp) || 
                            helper(s,p,sidx+1,pidx,dp);
                }else{
                    flag = helper(s,p,sidx,pidx + 2,dp);
                }
                
            }else{
                if(pch == s.charAt(sidx)){
                    flag = helper(s,p,sidx+1,pidx + 1,dp);
                }else{
                    return false;
                }
            }
            
        }
        
        dp[pidx][sidx] = flag?1:0;
        return flag;
        
        
    }
}