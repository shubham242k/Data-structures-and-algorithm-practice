import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner s = new Scanner(System.in);
        String s1 = s.next();
        String s2 = s.next();
        int[][] dp = new int[s1.length() + 1][s2.length() + 1];
        // int max = lcsmemo(s1,s2,0,0,dp);
        int max = lcstab(s1,s2,dp);
        System.out.println(max);
    }
    
    public static int lcstab(String s1,String s2,int dp[][]){
        int n = dp.length;
        int m = dp[0].length;
        for(int i = n-2;i>=0;i--){
            for(int j = m-2;j>=0;j--){
                if(s1.charAt(i) == s2.charAt(j)){
                    dp[i][j] = dp[i+1][j+1] + 1;
                }else{
                    dp[i][j] = Math.max(dp[i+1][j],dp[i][j+1]);
                }
            }
        }
        return dp[0][0];
    }
    public static int lcsmemo(String s1,String s2,int i1,int i2,Integer[][] dp){
        if(i1 == s1.length() || i2 == s2.length()){
            return 0;
        }
        if(dp[i1][i2] != null){
            return dp[i1][i2];
        }
        if(s1.charAt(i1) == s2.charAt(i2)){
            dp[i1][i2] = lcsmemo(s1,s2,i1+1,i2+1,dp) + 1;
            return dp[i1][i2];
        }else{
            int f = lcsmemo(s1,s2,i1+1,i2,dp);
            int s = lcsmemo(s1,s2,i1,i2+1,dp);
            dp[i1][i2] = Math.max(f,s);
            return dp[i1][i2];
        }
    }
    public static int lcs(String s1,String s2,int i1,int i2){
        if(i1 == s1.length() || i2 == s2.length()){
            return 0;
        }
        
        if(s1.charAt(i1) == s2.charAt(i2)){
            return lcs(s1,s2,i1+1,i2+1) + 1;
        }else{
            int f = lcs(s1,s2,i1+1,i2);
            int s = lcs(s1,s2,i1,i2+1);
            return Math.max(f,s);
        }
    }

}